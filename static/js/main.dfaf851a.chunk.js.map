{"version":3,"sources":["components/colorPokemon.js","components/nav/modalSearch.js","components/nav/nav.js","components/getPokemons.js","components/card/modal.js","components/card/cardItem.js","components/card/selectPage.js","components/typePokemon.js","components/card/tableCard.js","components/card/card.js","App.js","index.js"],"names":["colorsPokemons","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","ModalSearch","open","setOpen","search","className","onClose","center","length","console","log","src","sprites","front_default","alt","back_default","style","fontSize","name","stats","map","stat","key","base_stat","types","type","backgroundColor","Nav","useState","setSearch","pokemon","setPokemon","errorInput","setErrorInput","inputLabel","setInputLabel","href","TextField","error","id","label","value","onChange","e","target","toLowerCase","Button","variant","onClick","fetch","then","data","json","status","catch","getPokemon","url","a","Promise","resolve","reject","res","getAllPokemon","ModalWindow","img","pok","imgBack","color","useStyles","makeStyles","root","maxWidth","margin","media","height","width","MediaCard","classes","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","component","charAt","toUpperCase","substr","weight","abilities","ability","theme","button","display","marginTop","spacing","formControl","minWidth","ControlledOpenSelect","setPage","setLoad","page","setPages","FormControl","InputLabel","Select","labelId","onOpen","event","MenuItem","typePokemon","table","DenseTable","searchTyp","setShowTablePokemon","showTablePokemon","tablePokemon","setTablePokemon","storeTable","setStoreTable","useEffect","tableClick","alert","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","colorPokemon","undefined","TableBody","row","index","scope","cursor","Card","store","setStore","searchType","setSearchType","setType","nextPokemon","setNextPokemon","prevPokemon","setPrevPokemon","load","defaultValue","response","next","previous","allPokemon","results","getData","all","pokeWrite","btnNext","btnPrev","item","CircularProgress","i","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfaf851a.chunk.js","sourcesContent":["const colorsPokemons = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#f87116',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#c2c2c2',\r\n    psychic: '#f366b9',\r\n    steel: '#999999',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4',\r\n\r\n}\r\n\r\nexport default colorsPokemons;","import React, {useState} from \"react\";\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport \"./nav.scss\";\r\nimport \"../card/card.scss\"\r\nimport '../../components/card/card.scss';\r\nimport colorsPokemons from \"../colorPokemon\";\r\n\r\n\r\nconst ModalSearch = ({open,setOpen,search}) =>{\r\n    return (\r\n\r\n        <div className=\"modal\">\r\n\r\n            <Modal open={open} onClose={()=>{setOpen(false)}} center>\r\n                <div className=\"wrapModal\"  >\r\n                        {\r\n                            search.length === 0 ? (console.log(search)) : (\r\n                                <>\r\n                                    <div className=\"wrapImage\">\r\n                                    <img\r\n                                        src={search?.sprites?.front_default===null?\"https://ibo2020.org/wp/wp-content/themes/luxeritas/images/no-img.png\":search?.sprites?.front_default}\r\n                                         alt=\"\"\r\n                                         className=\"imgModal\"\r\n                                    />\r\n                                    <img\r\n                                        src={search?.sprites?.back_default===null?\"https://ibo2020.org/wp/wp-content/themes/luxeritas/images/no-img.png\":search?.sprites?.back_default}\r\n                                         alt=\"\"\r\n                                         className=\"imgModal\"\r\n                                    />\r\n                                    </div>\r\n                                        <p style={{fontSize: \"23px\"}}>\r\n                                            <b>{search.name}</b>\r\n                                        </p>\r\n                                    {search && search.stats.map((stat, key) => {\r\n                                        return <p key={key}>\r\n                                            <b>\r\n                                                {stat.stat.name}\r\n                                            </b> : {stat.base_stat}\r\n                                        </p>\r\n                                    })}\r\n                                    {search.types.map(((type, key) => {\r\n                                        return (\r\n                                            <div className=\"search__type\"\r\n                                                 style={{backgroundColor: colorsPokemons[type.type.name]}}\r\n                                                 key={key}\r\n                                            >\r\n                                                {type.type.name}\r\n                                            </div>\r\n                                        )\r\n                                    }))}\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalSearch;","import \"./nav.scss\"\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport { useState} from \"react\";\r\nimport ModalSearch from \"./modalSearch\";\r\n\r\nconst Nav = () => {\r\n    const [search, setSearch] = useState([]);\r\n    const [pokemon, setPokemon] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [errorInput,setErrorInput] = useState(false)\r\n    const [inputLabel,setInputLabel] = useState(false)\r\n\r\n    const findPokemon = () => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n            .then(data=>data.json())\r\n            .then(\r\n                (data)=> {\r\n                          if (pokemon.length===0 || data.status===\"404\"){\r\n                              setErrorInput(true)\r\n                              setInputLabel(true)\r\n                          }else {\r\n                              setSearch(data)\r\n                              setOpen(true);\r\n                              setErrorInput(false)\r\n                              setInputLabel(false)\r\n                          }\r\n                }\r\n\r\n            )\r\n            .catch(()=>{\r\n                setInputLabel(true)\r\n                setErrorInput(true)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"navBar\">\r\n            <div className=\"navBar__title\">\r\n                <h2>\r\n                    <a href=\"\">Pokemon</a>\r\n                </h2>\r\n            </div>\r\n            <div className=\"navBar__search\">\r\n                <TextField\r\n                    error={errorInput}\r\n                    id=\"standard-basic\"\r\n                    label={inputLabel?\"Please write correct\":\"Write pokemon\"}\r\n                    value={pokemon} onChange={(e)=>{\r\n                    setPokemon(e.target.value.toLowerCase())\r\n\r\n                }}/>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={findPokemon}>\r\n                    Search\r\n                </Button>\r\n                 <ModalSearch\r\n                     open={open}\r\n                     setOpen={setOpen}\r\n                     search={search}\r\n                 />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","export async function getPokemon (url){\r\nreturn new Promise((resolve,reject)=>{\r\n    fetch(url)\r\n        .then(res=> res.json())\r\n        .then(data=>{\r\n            resolve(data)\r\n\r\n        })\r\n})\r\n}\r\n\r\nexport async function getAllPokemon(url){\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(url)\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                resolve(data);\r\n            })\r\n\r\n    })\r\n}\r\n","import React, {useState} from \"react\";\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport {Button} from \"@material-ui/core\";\r\nimport './card.scss';\r\n\r\nconst ModalWindow = ({img,pok,imgBack}) =>{\r\n    const [open, setOpen] = useState(false);\r\n    const onOpenModal = () => setOpen(true);\r\n    const onCloseModal = () => setOpen(false);\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={onOpenModal}>\r\n\r\n                Open more information\r\n\r\n            </Button>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={onCloseModal}\r\n                center>\r\n                <div>\r\n\r\n                    <div className=\"wrapImage\">\r\n                    <img\r\n                        src={img===null?\"https://ibo2020.org/wp/wp-content/themes/luxeritas/images/no-img.png\":img}\r\n                        alt=\"\"\r\n                        className=\"imgModal\"/>\r\n                    <img\r\n                        src={imgBack===null?\"https://ibo2020.org/wp/wp-content/themes/luxeritas/images/no-img.png\":imgBack}\r\n                        alt=\"\"\r\n                        className=\"imgModal\"/>\r\n                    </div>\r\n                        {pok && pok.stats.map((stat,key)=>{\r\n                        return <p key={key}>\r\n                            <b>{stat.stat.name}</b> : {stat.base_stat}\r\n                        </p>\r\n                    })}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalWindow;","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './card.scss'\r\nimport colorsPokemons from \"../colorPokemon\";\r\nimport ModalWindow from \"./modal\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        margin:5,\r\n\r\n    },\r\n    media: {\r\n        height: 200,\r\n        width: 250\r\n\r\n    },\r\n});\r\n\r\nexport default function MediaCard({pok}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}  >\r\n            <CardActionArea>\r\n                <CardMedia\r\n\r\n                    className={classes.media}\r\n                    image={pok.sprites.front_default===null?\"https://ibo2020.org/wp/wp-content/themes/luxeritas/images/no-img.png\":pok.sprites.front_default}\r\n                    title=\"Contemplative Reptile\"\r\n\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        className=\"wrapName\">\r\n                        {pok.name.charAt(0).toUpperCase() + pok.name.substr(1)}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        className=\"wrapTypes\">\r\n                        {pok.types.map(((type,key)=>{\r\n                            return(\r\n                                <div className=\"types__item\"\r\n                                style={{backgroundColor:colorsPokemons[type.type.name]}}\r\n                                     key={key}\r\n                                >\r\n                                    {type.type.name}\r\n                                </div>\r\n                            )\r\n                        }))}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\">\r\n\r\n                        <b>Weight</b> : {pok.weight}\r\n                        <br/>\r\n                      <b>Height</b> : {pok.height}\r\n                        <br/>\r\n                  <b>Abilities</b> : {pok.abilities[0].ability.name}\r\n\r\n                        <ModalWindow\r\n                            img={pok.sprites.front_default}\r\n                            imgBack={pok.sprites.back_default}\r\n                            pok={pok} />\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: 'block',\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nexport default function ControlledOpenSelect({setPage,setLoad}) {\r\n    const classes = useStyles();\r\n    const [page, setPages] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setPages(event.target.value);\r\n        setPage(event.target.value)\r\n        setLoad(true)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-controlled-open-select-label\">Page</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={page}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={50}>Fifty</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","const  typePokemon = [\r\n    'bug',\r\n    'dragon',\r\n    'fairy',\r\n    'fire',\r\n    'ghost',\r\n    'ground',\r\n    'normal',\r\n    'psychic',\r\n    'steel',\r\n    'dark',\r\n    'electric',\r\n    'fighting',\r\n    'flying',\r\n    'grass',\r\n    'ice',\r\n    'poison',\r\n    'rock',\r\n    'water'\r\n]\r\nexport default typePokemon;","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './card.scss'\r\nimport colorPokemon from \"../colorPokemon\";\r\nimport ModalSearch from \"../nav/modalSearch\";\r\nimport {Button} from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width:\"100%\"\r\n    },\r\n});\r\n\r\n\r\nexport default function DenseTable({searchTyp,setShowTablePokemon,showTablePokemon}) {\r\n    const classes = useStyles();\r\n    const [tablePokemon,setTablePokemon] = useState('');\r\n    const [storeTable,setStoreTable] = useState([]);\r\n    const [open,setOpen] = useState(false)\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n       tableClick()\r\n    },[tablePokemon])\r\n\r\n    const tableClick = () => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${tablePokemon}`)\r\n            .then(data=>data.json())\r\n            .then(\r\n                (data)=> {\r\n                    if(tablePokemon.length===0 || data.status===\"404\"){\r\n                      return\r\n                    }else{\r\n                        setStoreTable(data)\r\n                        setOpen(true);\r\n                    }\r\n                }\r\n\r\n            )\r\n            .catch(()=>alert(\"Try again please\"))\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table}\r\n                   size=\"small\"\r\n                   aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell\r\n                            align={\"center\"}\r\n                            style={{color:colorPokemon[searchTyp.name]}}>\r\n\r\n                            {searchTyp?.name===undefined?<><b>Chose please type of pokemon</b></>:<> All pokemon <b>{searchTyp.name}</b></>}\r\n\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {searchTyp?.pokemon?.map((row,index=1) => (\r\n                        <TableRow key={index}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {index+1}\r\n                            </TableCell>\r\n                            <TableCell\r\n                                align=\"left\"\r\n                                style={{color:'blue',cursor:\"pointer\"}}\r\n                                onClick={() =>{\r\n                                    setTablePokemon(row.pokemon.name)\r\n                                      if(tablePokemon===tablePokemon){\r\n                                         return\r\n                                      }else {\r\n                                          tableClick()\r\n                                      }\r\n                                }}\r\n                            >\r\n                                {row.pokemon.name}</TableCell>\r\n\r\n                        </TableRow>\r\n                    ))}\r\n\r\n                    <ModalSearch\r\n                        open={open}\r\n                        setOpen={setOpen}\r\n                        search={storeTable}\r\n                    />\r\n\r\n                </TableBody>\r\n            </Table>\r\n            <Button variant={\"outlined\"}\r\n                    onClick={() => setShowTablePokemon(!showTablePokemon)}>\r\n                {showTablePokemon ? 'Close' : 'Open'}table pokemon\r\n            </Button>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import {useEffect, useState} from \"react\";\r\nimport {getAllPokemon, getPokemon} from \"../getPokemons\";\r\nimport './card.scss'\r\nimport {Button, CircularProgress} from \"@material-ui/core\";\r\nimport MediaCard from \"./cardItem\";\r\nimport ControlledOpenSelect from \"./selectPage\";\r\nimport colorPokemon from \"../colorPokemon\";\r\nimport typePokemon from \"../typePokemon\";\r\nimport DenseTable from \"./tableCard\";\r\n\r\n\r\nconst Card = () => {\r\n    const [store, setStore] = useState([]);\r\n    const [searchType, setSearchType] = useState([]);\r\n    const [type, setType] = useState('');\r\n    const [showTablePokemon, setShowTablePokemon] = useState(false)\r\n    const [nextPokemon, setNextPokemon] = useState('')\r\n    const [prevPokemon, setPrevPokemon] = useState('')\r\n    const [load, setLoad] = useState(true)\r\n    const [page, setPage] = useState(10);\r\n    const defaultValue = `https://pokeapi.co/api/v2/pokemon?limit=${page}&offset=1000`;\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let response = await getPokemon(defaultValue)\r\n            setNextPokemon(response.next)\r\n            setPrevPokemon(response.previous)\r\n            let pokemon = await allPokemon(response.results)\r\n            setLoad(false)\r\n        }\r\n\r\n        getData()\r\n    }, [page])\r\n\r\n    const allPokemon = async (data) => {\r\n        let pokemon = await Promise.all(data.map(async pokemon => {\r\n            let pokeWrite = await getAllPokemon(pokemon.url);\r\n            return pokeWrite\r\n        }))\r\n        setStore(pokemon)\r\n    }\r\n\r\n    const btnNext = async () => {\r\n        setLoad(true);\r\n        let data = await getAllPokemon(nextPokemon);\r\n        await allPokemon(data.results);\r\n        setNextPokemon(data.next)\r\n        setPrevPokemon(data.previous)\r\n        setLoad(false);\r\n    }\r\n    const btnPrev = async () => {\r\n        if (!prevPokemon) return\r\n        setLoad(true)\r\n        let data = await getAllPokemon(prevPokemon);\r\n        await allPokemon(data.results);\r\n        setNextPokemon(data.next)\r\n        setPrevPokemon(data.previous)\r\n        setLoad(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://pokeapi.co/api/v2/type/${type}`)\r\n            .then((data) => data.json())\r\n            .then(data => setSearchType(data))\r\n    }, [type])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{marginTop:\"30px\"}}>\r\n            <Button variant={\"outlined\"  }\r\n                    onClick={() => setShowTablePokemon(!showTablePokemon)}>{showTablePokemon ? 'Close' : 'Open'}\r\n                table pokemon\r\n            </Button>\r\n            </div>\r\n            {showTablePokemon ? (\r\n                <>\r\n                <div className=\"wrapTypeItem\">\r\n                    {\r\n                        typePokemon.map((item, key) => {\r\n                            return (\r\n                                <div style={{cursor: \"pointer\"}} key={key}>\r\n                                    <p key={key} style={{color: colorPokemon[item]}} onClick={() => setType(item)}>\r\n                                        {item}\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n                <DenseTable\r\n                    searchTyp={searchType}\r\n                    showTablePokemon={showTablePokemon}\r\n                    setShowTablePokemon={setShowTablePokemon}\r\n                />\r\n            </>\r\n            ) : (\r\n\r\n            <>\r\n\r\n            <div className=\"btnWrap\">\r\n                <Button variant=\"outlined\"\r\n                        onClick={btnPrev}>\r\n                    Prev\r\n                </Button>\r\n                <Button variant=\"outlined\"\r\n                        onClick={btnNext}\r\n                >\r\n                    Next</Button>\r\n\r\n            </div>\r\n            <ControlledOpenSelect\r\n                setPage={setPage}\r\n                setLoad={setLoad}/>\r\n            <div>\r\n\r\n            </div>\r\n            <div className=\"wrapCard\">\r\n\r\n                {load ? (<CircularProgress/>) : (\r\n                    store.map((pok, i) => {\r\n                        return (\r\n\r\n                            <MediaCard pok={pok} key={i}/>\r\n\r\n                        )\r\n                    })\r\n                )}\r\n            </div>\r\n            <div className=\"btnWrap\">\r\n                <Button variant=\"outlined\"\r\n                        onClick={btnPrev}>\r\n                    Prev\r\n                </Button>\r\n                <Button variant=\"outlined\"\r\n                        onClick={btnNext}>\r\n                    Next\r\n                </Button>\r\n\r\n            </div>\r\n            </>\r\n                )}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Card;","import './App.scss';\nimport Nav from \"./components/nav/nav\";\nimport Card from \"./components/card/card\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Nav/>\n        <Card/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}